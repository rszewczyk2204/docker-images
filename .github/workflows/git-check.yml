name: GitLint Workflow

on:
  pull_request:
    branches:
      - '*'

env:
  CI_MAX_GIT_FILESIZE: 1048576  # 1MB in bytes
  CI_ENABLED_LINT_GIT_MAX_CHARS: 72

jobs:
  lint_git_pull:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Lint Git Pull
        run: |
          git config --global --add safe.directory /__w/docker-images/docker-images
          git checkout ${{ github.head_ref }}
          commits=$(git log --oneline --merges "refs/remotes/origin/${{ github.base_ref }}.." | wc -l)
          if [[ $commits -gt 0 ]]; then
            echo "Pulling changes from the base branch to PR branch is forbidden."
            echo "Changes are to be reversed and use git rebase."
            echo "git rebase ${{ github.base_ref }}"
            echo "git push --force"
          else
            echo "No forbidden merge commits found."
          fi

      - name: Clean up
        run: |
          sudo rm -rf ${{ secrets.REPO_NAME }}

  lint_git_duplicated:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Lint Git Duplicated
        run: |
          git config --global --add safe.directory /__w/docker-images/docker-images
          git checkout ${{ github.head_ref }}
          commits_count=$(git log --format=%s "refs/remotes/origin/${{ github.base_ref }}.." | wc -l)
          deduplicated_commits_count=$(git log --format=%s "refs/remotes/origin/${{ github.base_ref }}.." | sort -u | wc -l)
          if [[ ${commits_count} -ne ${deduplicated_commits_count} ]]; then
            echo "You should delete commits with the same message, as they make it harder to go through the history of changes."
            echo "Probably should squash the history before merging."
            echo "You can achieve it with the given command:"
            echo "git rebase -i ${{ github.base_ref }}"
            echo "Duplicated commits:"
            diff --unified --color=always <(git log --format=%s "refs/remotes/origin/${{ github.base_ref }}..") <(git log --format=%s "refs/remotes/origin/${{ github.base_ref }}.." | awk '!x[$0]++')
            exit 1
          else
            echo "No duplicated commits found."
          fi

      - name: Clean up
        run: |
          sudo rm -rf ${{ secrets.REPO_NAME }}
